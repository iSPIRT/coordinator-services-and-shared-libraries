diff --git a/containers/Dockerfile.al2 b/containers/Dockerfile.al2
--- a/containers/Dockerfile.al2
+++ b/containers/Dockerfile.al2
@@ -19,48 +19,48 @@
 # We keep the build artifacts in the -build directory
 WORKDIR /tmp/crt-builder

-RUN git clone -b v1.0.2 https://github.com/awslabs/aws-lc.git aws-lc
+RUN git clone --depth 1 -b v1.0.2 https://github.com/awslabs/aws-lc.git aws-lc
 RUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DCMAKE_INSTALL_PREFIX=/usr -GNinja -DBUILD_TESTING=0 -S aws-lc -B aws-lc/build .
 RUN go env -w GOPROXY=direct
 RUN cmake3 --build aws-lc/build --parallel $(nproc) --target install

-RUN git clone -b v1.3.20 https://github.com/aws/s2n-tls.git
+RUN git clone --depth 1 -b v1.3.20 https://github.com/aws/s2n-tls.git
 RUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DBUILD_TESTING=0 -DCMAKE_INSTALL_PREFIX=/usr -S s2n-tls -B s2n-tls/build
 RUN cmake3 --build s2n-tls/build --parallel $(nproc) --target install

-RUN git clone -b v0.8.0 https://github.com/awslabs/aws-c-common.git
+RUN git clone --depth 1 -b v0.8.0 https://github.com/awslabs/aws-c-common.git
 RUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DBUILD_TESTING=0 -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-common -B aws-c-common/build
 RUN cmake3 --build aws-c-common/build --parallel $(nproc) --target install

-RUN git clone -b v0.1.2 https://github.com/awslabs/aws-c-sdkutils.git
+RUN git clone --depth 1 -b v0.1.2 https://github.com/awslabs/aws-c-sdkutils.git
 RUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DBUILD_TESTING=0 -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-sdkutils -B aws-c-sdkutils/build
 RUN cmake3 --build aws-c-sdkutils/build --parallel $(nproc) --target install

-RUN git clone -b v0.5.18 https://github.com/awslabs/aws-c-cal.git
+RUN git clone --depth 1 -b v0.5.18 https://github.com/awslabs/aws-c-cal.git
 RUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DBUILD_TESTING=0 -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-cal -B aws-c-cal/build
 RUN cmake3 --build aws-c-cal/build --parallel $(nproc) --target install

-RUN git clone -b v0.11.0 https://github.com/awslabs/aws-c-io.git
+RUN git clone --depth 1 -b v0.11.0 https://github.com/awslabs/aws-c-io.git
 RUN cmake3 -DUSE_VSOCK=1 -DCMAKE_PREFIX_PATH=/usr -DBUILD_TESTING=0 -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-io -B aws-c-io/build
 RUN cmake3 --build aws-c-io/build --parallel $(nproc) --target install

-RUN git clone -b v0.2.14 http://github.com/awslabs/aws-c-compression.git
+RUN git clone --depth 1 -b v0.2.14 http://github.com/awslabs/aws-c-compression.git
 RUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DBUILD_TESTING=0 -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-compression -B aws-c-compression/build
 RUN cmake3 --build aws-c-compression/build --parallel $(nproc) --target install

-RUN git clone -b v0.6.19 https://github.com/awslabs/aws-c-http.git
+RUN git clone --depth 1 -b v0.6.19 https://github.com/awslabs/aws-c-http.git
 RUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DBUILD_TESTING=0 -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-http -B aws-c-http/build
 RUN cmake3 --build aws-c-http/build --parallel $(nproc) --target install

-RUN git clone -b v0.6.15 https://github.com/awslabs/aws-c-auth.git
+RUN git clone --depth 1 -b v0.6.15 https://github.com/awslabs/aws-c-auth.git
 RUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DBUILD_TESTING=0 -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-auth -B aws-c-auth/build
 RUN cmake3 --build aws-c-auth/build --parallel $(nproc) --target install

-RUN git clone -b json-c-0.16-20220414 https://github.com/json-c/json-c.git
+RUN git clone --depth 1 -b json-c-0.16-20220414 https://github.com/json-c/json-c.git
 RUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DBUILD_TESTING=0 -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_SHARED_LIBS=OFF -GNinja -S json-c -B json-c/build
 RUN cmake3 --build json-c/build --parallel $(nproc)  --target install

-RUN git clone -b v0.2.1 https://github.com/aws/aws-nitro-enclaves-nsm-api.git
+RUN git clone --depth 1 -b v0.2.1 https://github.com/aws/aws-nitro-enclaves-nsm-api.git
 ADD nsm-api.patch /tmp/crt-builder/nsm-api.patch
 RUN cd aws-nitro-enclaves-nsm-api && git apply /tmp/crt-builder/nsm-api.patch
 RUN source $HOME/.cargo/env && cd aws-nitro-enclaves-nsm-api && cargo build --locked --release --jobs $(nproc) -p nsm-lib
